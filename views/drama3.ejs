<%- include("partials/header.ejs") %>

<div class="container">
  <!-- Image with rounded border -->
  <img src="/images/goblin2.png" alt="Goblin image" class="rounded img-fluid kdramaPhotos" style="max-width: 100%;">

  <!-- Text under the image -->
    <h2 class="mt-3">Synposis</h2>

    <p class="mt-3 synopDescrip">
        Kim Shin, the male lead actor, is not just an ordinary goblin; he is a guardian of souls, watching over them with unwavering dedication.
        Alongside him resides an amnesiac grim reaper, a man named Wang Yeo, tasked with guiding departed souls to their final destination.
        Together, they navigate the delicate balance between the realms of the living and the dead. Amidst this mystical backdrop, the female
        lead, Ji Eun Tak, emerges as a beacon of hope, despite grappling with the harshness of her reality. Her unwavering optimism draws her into
        an unexpected romance with Kim Shin. Meanwhile, the woman Kim Sun, the radiant proprietor of a bustling chicken shop, captivates the
        hearts of countless admirers with her infectious charm.
    </p>

    <div class="metadata">
        <p class="mt-3"><span class="metadata-title">Directors:</span> Kim Eun-sook and Lee Eun-bok</p>
        <p class="mt-3"><span class="metadata-title">Released:</span> December 2, 2016</p>
        <p class="mt-3"><span class="metadata-title">Status:</span> Completed - <span style="font-style: italic;">Season 1</span></p>
        <p class="mt-3"><span class="metadata-title">Episodes:</span> 16</p>
        <p class="mt-3"><span class="metadata-title">Country / Language:</span> Korean</p>
        <p class="mt-3"><span class="metadata-title">Genres:</span> Romance, Comedy, Supernatural, Melodrama, Fantasy</p>
        </div>

    <hr>

<!-- Form to create a post -->
<h4>Add Comment</h4>
<form action="/drama3/posts" method="POST">
    <div class="mb-3">
    <textarea class="form-control" id="content" name="content" rows="3" required></textarea>
    </div>
    <button type="submit" class="btn btn-primary">Add Comment</button>
</form>

<hr>

<h4>Comments</h4>
<div class="comment-container">
  <% if (posts.length > 0) { %>
    <% posts.forEach((post, index) => { %>
      <div class="comment-box" id="comment<%= index %>">
        <div class="comment-content">
          <p><%= post %></p>
          <!-- Edit and Delete buttons -->
          <div class="comment-buttons">
            <!-- Edit button -->
            <button class="btn btn-primary edit-btn my-1" data-index="<%= index %>">Edit</button>
            <!-- Delete button -->
            <form action="/delete/<%= index %>" method="POST">
              <button type="submit" class="btn btn-danger my-1 mb-2">Delete</button>
            </form>
          </div>
        </div>
        <!-- Edit form (hidden by default) -->
        <form class="edit-form" style="display: none;">
          <div class="mb-3">
            <textarea class="form-control" rows="3" required></textarea>
          </div>
          <!-- Cancel Edit button -->
          <button type="button" class="btn btn-secondary cancel-edit-btn">Cancel</button>
          <!-- Confirm Edit button -->
          <button type="button" class="btn btn-success confirm-edit-btn">Confirm Edit</button>
        </form>
      </div>
      <hr>
    <% }); %>
  <% } else { %>
    <div class="no-comment-box">
      <p>No comments yet.</p>
    </div>
  <% } %>
</div>


  
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const editButtons = document.querySelectorAll(".edit-btn");
    editButtons.forEach(button => {
      button.addEventListener("click", function() {
        const index = this.getAttribute("data-index");
        const commentBox = document.getElementById(`comment${index}`);
        const editForm = commentBox.querySelector(".edit-form");
        const originalContent = commentBox.querySelector("p").textContent;
        const textarea = editForm.querySelector("textarea");
        textarea.value = originalContent;
        commentBox.querySelector("p").style.display = "none";
        // Hide edit & delete buttons
        commentBox.querySelector(".comment-buttons").style.display = "none"; 
        editForm.style.display = "block";
      });
    });

    const confirmEditButtons = document.querySelectorAll(".confirm-edit-btn");
    confirmEditButtons.forEach(button => {
      button.addEventListener("click", function() {
        const commentBox = this.parentElement.parentElement;
        const index = commentBox.getAttribute("id").replace("comment", "");
        const updatedContent = commentBox.querySelector("textarea").value;
        // Send an AJAX request to update the content
        fetch(`/edit/${index}`, {
          method: "PUT",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ content: updatedContent })
        })
        .then(response => {
          if (!response.ok) {
            throw new Error("Failed to update comment.");
          }
          return response.json();
        })
        .then(data => {
          // Update the displayed content if successful
          commentBox.querySelector("p").textContent = updatedContent;
          commentBox.querySelector("p").style.display = "block";
          // Show edit & delete buttons
          commentBox.querySelector(".comment-buttons").style.display = "block";
          commentBox.querySelector(".edit-form").style.display = "none";
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Failed to update comment.");
        });
      });
    });

    // Add event listeners for cancel edit buttons
    const cancelEditButtons = document.querySelectorAll(".cancel-edit-btn");
    cancelEditButtons.forEach(button => {
      button.addEventListener("click", function() {
        const commentBox = this.parentElement.parentElement;
        commentBox.querySelector("p").style.display = "block";
        commentBox.querySelector(".comment-buttons").style.display = "block"; // Show edit and delete buttons
        commentBox.querySelector(".edit-form").style.display = "none";
      });
    });
  });
</script>


<%- include("partials/footer.ejs") %>
