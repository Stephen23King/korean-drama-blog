<%- include("partials/header.ejs") %>

<div class="container">
  <!-- Image with rounded border -->
  <img src="/images/fatedtoloveyou2.png" alt="Fated To Love You image" class="rounded img-fluid kdramaPhotos" style="max-width: 100%;">

  <!-- Text under the image -->
    <h2 class="mt-3">Synposis</h2>

    <p class="mt-3 synopDescrip">Fated To Love You is a story of an ordinary girl, Mi Yeong, who has neither outstanding looks,
      a prestigious college degree, nor any other charming qualities, facing her whole life abruptly changing when love
      comes knocking at her door. While on vacation, she accidentally happens to spend one night with an unknown rich man
      and even gets pregnant from that night. Because of this incident, her life will never be the same, and this fateful
      encounter brings love that transforms this not-so-special girl to an attractive, charming lady.
    </p>

    <div class="metadata">
      <p class="mt-3"><span class="metadata-title">Directors:</span> Kim Hee-won and Lee Dong-yoon</p>
      <p class="mt-3"><span class="metadata-title">Released:</span> July 2, 2014</p>
      <p class="mt-3"><span class="metadata-title">Status:</span> Completed - <span style="font-style: italic;">Season 1</span></p>
      <p class="mt-3"><span class="metadata-title">Episodes:</span> 20</p>
      <p class="mt-3"><span class="metadata-title">Country / Language:</span> Korean</p>
      <p class="mt-3"><span class="metadata-title">Genres:</span> Romance, Comedy, Contract Relationship, Family, Melodrama, Rich Man, Business</p>
    </div>

    <hr>

<!-- Form to create a post -->
<h4>Add Comment</h4>
<form action="/drama1/posts" method="POST">
    <div class="mb-3">
    <textarea class="form-control" id="content" name="content" rows="3" required></textarea>
    </div>
    <button type="submit" class="btn btn-primary">Add Comment</button>
</form>

<hr>

<h4>Comments</h4>
<div class="comment-container">
  <% if (posts.length > 0) { %>
    <% posts.forEach((post, index) => { %>
      <div class="comment-box" id="comment<%= index %>">
        <div class="comment-content">
          <p><%= post %></p>
          <!-- Edit and Delete buttons -->
          <div class="comment-buttons">
            <!-- Edit button -->
            <button class="btn btn-primary edit-btn my-1" data-index="<%= index %>">Edit</button>
            <!-- Delete button -->
            <button class="btn btn-danger delete-btn my-1 mb-2" data-index="<%= index %>">Delete</button> <!-- Change form to button -->
          </div>
        </div>
        <!-- Edit form (hidden by default) -->
        <form class="edit-form" style="display: none;">
          <div class="mb-3">
            <textarea class="form-control" rows="3" required></textarea>
          </div>
          <!-- Cancel Edit button -->
          <button type="button" class="btn btn-secondary cancel-edit-btn">Cancel</button>
          <!-- Confirm Edit button -->
          <button type="button" class="btn btn-success confirm-edit-btn">Confirm Edit</button>
        </form>
      </div>
      <hr> 
    <% }); %>
  <% } else { %>
    <div class="no-comment-box">
      <p>No comments yet.</p>
    </div>
  <% } %>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const editButtons = document.querySelectorAll(".edit-btn");
    editButtons.forEach(button => {
      button.addEventListener("click", function() {
        const index = this.getAttribute("data-index");
        const commentBox = document.getElementById(`comment${index}`);
        const editForm = commentBox.querySelector(".edit-form");
        const originalContent = commentBox.querySelector("p").textContent;
        const textarea = editForm.querySelector("textarea");
        textarea.value = originalContent;
        commentBox.querySelector("p").style.display = "none";
        // Hide edit & delete buttons
        commentBox.querySelector(".comment-buttons").style.display = "none"; 
        editForm.style.display = "block";
      });
    });

    const confirmEditButtons = document.querySelectorAll(".confirm-edit-btn");
    confirmEditButtons.forEach(button => {
      button.addEventListener("click", function() {
        const commentBox = this.parentElement.parentElement;
        const index = commentBox.getAttribute("id").replace("comment", "");
        const updatedContent = commentBox.querySelector("textarea").value;
        // Send an AJAX request to update the content
        fetch(`/edit/drama1/${index}`, { // Updated URL
          method: "PUT",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({ content: updatedContent })
        })
        .then(response => {
          if (!response.ok) {
            throw new Error("Failed to update comment.");
          }
          return response.json();
        })
        .then(data => {
          // Update the displayed content if successful
          commentBox.querySelector("p").textContent = updatedContent;
          commentBox.querySelector("p").style.display = "block";
          // Show edit & delete buttons
          commentBox.querySelector(".comment-buttons").style.display = "block";
          commentBox.querySelector(".edit-form").style.display = "none";
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Failed to update comment.");
        });
      });
    });

    // Add event listeners for cancel edit buttons
    const cancelEditButtons = document.querySelectorAll(".cancel-edit-btn");
    cancelEditButtons.forEach(button => {
      button.addEventListener("click", function() {
        const commentBox = this.parentElement.parentElement;
        commentBox.querySelector("p").style.display = "block";
        commentBox.querySelector(".comment-buttons").style.display = "block"; // Show edit and delete buttons
        commentBox.querySelector(".edit-form").style.display = "none";
      });
    });

    // Add event listeners for delete buttons
    const deleteButtons = document.querySelectorAll(".delete-btn");
    deleteButtons.forEach(button => {
      button.addEventListener("click", function() {
        const index = this.getAttribute("data-index");
        // Send an AJAX request to delete the comment
        fetch(`/delete/drama1/${index}`, { // Updated URL
          method: "DELETE",
          headers: {
            "Content-Type": "application/json"
          }
        })
        .then(response => {
          if (!response.ok) {
            throw new Error("Failed to delete comment.");
          }
          // Remove the comment box from the DOM
          const commentBox = document.getElementById(`comment${index}`);
          commentBox.remove(); // Remove the comment box from the DOM
        })
        .catch(error => {
          console.error("Error:", error);
          alert("Failed to delete comment.");
        });
      });
    });
  });
</script>

<%- include("partials/footer.ejs") %>
